    gap> aux := FpfAutomorphismGroupsCyclic( [2,2,2,2], 5 );
    [ [ [ f1, f2, f3, f4 ] -> [ f4, f1*f2, f2*f3, f3*f4 ] ],
      <pc group of size 16 with 4 generators> ]
    gap> a := aux[1][1];
    [ f1, f2, f3, f4 ] -> [ f4, f1*f2, f2*f3, f3*f4 ]
    gap> phi := Group( a );;
    gap> G := aux[2];;
    gap> D := DesignFromFerreroPair( G, phi, "*" );
    <a 2 - ( 16, 5, 4 ) nearring generated design>
    gap> D;
    <a 2 - ( 16, 5, 4 ) nearring generated design>
    gap> DesignParameter( D );
    [ 2, 16, 48, 15, 5, 4 ]
    gap> PrintIncidenceMat( D );
    ...1...1...11...1...1..1..11..1...1..1..1...11..
    1......1...1..1.1...11...1..1..1...11..1..1....1
    .1..1......11..1...1..1...11....1..1..11..1...1.
    ..1..1..1...1...1.1...1..1...11...1.1....11...1.
    1....11..1......1..1.1....1.1...11...1...1..1.1.
    .1..1.1...1..1......11....1..11....11....1.1.1..
    ..1..1.1.1...1...1...1...1.1....1.1...11...1.1..
    ..11...1..1.1..1..1.....1...1...1..1.1...1.1...1
    ..1.1...1.1...1..1.1.1.....1..1..1...1..1.1....1
    1...1.1....1.1...11...1.1.......1.1.1...1...1..1
    1...1...11....11....1..11....1....1..1.1...1..1.
    .1...1..1.1.1....1.1...11...1..1....1..1....11..
    .1.1....11...1.1....1.1..1.1...1.1.......1..1..1
    .1.1..1....1..1..11....1.1..1.1..1....1....1..1.
    ..11..1..1....1.1..1..1.1....1.1...1..1.1....1..
    1....1.1..1..1.1..1....1..1..1.1.1....1.1.1.....
    gap> IsCircularDesign( D );
    true
    gap> PointsIncidentBlocks( D, [2,7] );
    [ 6, 14 ]
    gap> BlocksIncidentPoints( D, [6,14] );
    [ 2, 7, 31, 44 ]
    gap> BlockIntersectionNumbers( D, 4 );
    [ 0, 2, 2, 5, 0, 0, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 0,
      2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 0, 2, 2, 0, 2, 2, 0, 2,
      2, 2, 1, 2 ]
