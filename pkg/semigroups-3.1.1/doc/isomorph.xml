#############################################################################
##
#W  isomorph.xml
#Y  Copyright (C) 2014                                   James D. Mitchell
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="SmallestMultiplicationTable">
  <ManSection>
    <Attr Name = "SmallestMultiplicationTable" Arg = "S"/>
    <Returns>
      The lex-least multiplication table of a semigroup.
    </Returns>
    <Description>
      This function returns the lex-least multiplication table of a semigroup
      isomorphic to the semigroup <A>S</A>. <C>SmallestMultiplicationTable</C>
      is an isomorphism invariant of semigroups, and so it can, for example, be
      used to check if two semigroups are isomorphic. <P/>

      Due to the high complexity of computing the smallest multiplication table
      of a semigroup, this function only performs well for semigroups with
      at most approximately 50 elements.<P/>

      <C>SmallestMultiplicationTable</C> is based on the function
      <Ref Attr = "IdSmallSemigroup" BookName = "Smallsemi"/> by Andreas
      Distler.<P/>

      <Example><![CDATA[
gap> S := Semigroup(
> Bipartition([[1, 2, 3, -1, -3], [-2]]),
> Bipartition([[1, 2, 3, -1], [-2], [-3]]),
> Bipartition([[1, 2, 3], [-1], [-2, -3]]),
> Bipartition([[1, 2, -1], [3, -2], [-3]]));;
gap> Size(S);
8
gap> SmallestMultiplicationTable(S);
[ [ 1, 1, 3, 4, 5, 6, 7, 8 ], [ 1, 1, 3, 4, 5, 6, 7, 8 ], 
  [ 1, 1, 3, 4, 5, 6, 7, 8 ], [ 1, 3, 3, 4, 5, 6, 7, 8 ], 
  [ 5, 5, 6, 7, 5, 6, 7, 8 ], [ 5, 5, 6, 7, 5, 6, 7, 8 ], 
  [ 5, 6, 6, 7, 5, 6, 7, 8 ], [ 5, 6, 6, 7, 5, 6, 7, 8 ] ]]]></Example>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="IsIsomorphicSemigroup">
  <ManSection>
    <Oper Name = "IsIsomorphicSemigroup" Arg = "S, T"/>
    <Returns>
      <K>true</K> or <K>false</K>.
    </Returns>
    <Description>
      If <A>S</A> and <A>T</A> are semigroups, then this operation attempts
      to determine whether <A>S</A> and <A>T</A> are isomorphic semigroups by
      using the operation <Ref Oper = "IsomorphismSemigroups" />.  If
      <C>IsomorphismSemigroups(<A>S</A>, <A>T</A>)</C> returns an isomorphism,
      then <C>IsIsomorphicSemigroup(<A>S</A>, <A>T</A>)</C> returns <K>true</K>,
      while if <C>IsomorphismSemigroups(<A>S</A>, <A>T</A>)</C> returns
      <K>fail</K>, then <C>IsIsomorphicSemigroup(<A>S</A>, <A>T</A>)</C> returns
      <K>false</K>. Note that in some cases, at present, there is no
      method for determining whether <A>S</A> is isomorphic to <A>T</A>, even
      if it is obvious to the user whether or not <A>S</A> and <A>T</A> are
      isomorphic. There are plans to improve this in the future. <P/>

      If the size of <A>S</A> and <A>T</A> is rather small &#8212; with
      approximately 50 or fewer elements &#8212; then it is possible to
      calculate whether <A>S</A> and <A>T</A> are isomorphic by using <Ref Attr
        = "SmallestMultiplicationTable" />, but this is not currently done by
      <C>IsIsomorphicSemigroup</C>. In particular, <A>S</A> and <A>T</A> are
      isomorphic if and only if <C>SmallestMultiplicationTable(<A>S</A>) =
        SmallestMultiplicationTable(<A>T</A>)</C>.

      <Example><![CDATA[
gap> S := Semigroup(PartialPerm([1, 2, 4], [1, 3, 5]),
>                   PartialPerm([1, 3, 5], [1, 2, 4]));;
gap> T := AsSemigroup(IsTransformationSemigroup, S);;
gap> IsIsomorphicSemigroup(S, T);
true
gap> IsIsomorphicSemigroup(FullTransformationMonoid(4),
> PartitionMonoid(4));
false]]></Example>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="IsomorphismSemigroups">
  <ManSection>
    <Oper Name = "IsomorphismSemigroups" Arg = "S, T"/>
    <Returns>
      An isomorphism, or <K>fail</K>.
    </Returns>
    <Description>
      This operation attempts to find an isomorphism from the semigroup <A>S</A>
      to the semigroup <A>T</A>. If it finds one, then it is returned, and if
      not, then <K>fail</K> is returned. <P/>

      For many types of semigroup, <C>IsomorphismSemigroups</C> is not able
      to determine whether or not <A>S</A> and <A>T</A> are isomorphic, and so
      this operation may result in an "Error, no method found".
      <C>IsomorphismSemigroups</C> may be able deduce that <A>S</A> and <A>T</A>
      are not isomorphic by finding that some of their semigroup-theoretic
      properties differ; however it is harder to construct an isomorphism for
      semigroups that are isomorphic. <P/>

      At present, <C>IsomorphismSemigroups</C> is only able to return an
      isomorphism when <A>S</A> and <A>T</A> are finite simple, 0-simple, or
      monogenic semigroups, or when <C><A>S</A> = <A>T</A></C>. 
      See <Ref Prop="IsSimpleSemigroup" />, <Ref Prop="IsZeroSimpleSemigroup"
        />, and <Ref Prop="IsMonogenicSemigroup" /> for more information
      about these types of semigroups.

      <Example><![CDATA[
gap> S := RectangularBand(IsTransformationSemigroup, 4, 5);
<regular transformation semigroup of size 20, degree 9 with 5 
 generators>
gap> T := RectangularBand(IsBipartitionSemigroup, 4, 5);
<regular bipartition semigroup of size 20, degree 3 with 5 generators>
gap> IsomorphismSemigroups(S, T) <> fail;
true
gap> D := DClass(FullTransformationMonoid(5),
>                Transformation([1, 2, 3, 4, 1]));;
gap> S := PrincipalFactor(D);;
gap> StructureDescription(UnderlyingSemigroup(S));
"S4"
gap> S;
<Rees 0-matrix semigroup 10x5 over S4>
gap> D := DClass(PartitionMonoid(5),
> Bipartition([[1], [2, -2], [3, -3], [4, -4], [5, -5], [-1]]));;
gap> T := PrincipalFactor(D);;
gap> StructureDescription(UnderlyingSemigroup(T));
"S4"
gap> T;
<Rees 0-matrix semigroup 15x15 over S4>
gap> IsomorphismSemigroups(S, T);
fail
gap> I := SemigroupIdeal(FullTransformationMonoid(5),
>                        Transformation([1, 1, 2, 3, 4]));;
gap> T := PrincipalFactor(DClass(I, I.1));;
gap> StructureDescription(UnderlyingSemigroup(T));
"S4"
gap> T;
<Rees 0-matrix semigroup 10x5 over S4>
gap> IsomorphismSemigroups(S, T) <> fail;
true]]></Example>
    </Description>
  </ManSection>
<#/GAPDoc>
