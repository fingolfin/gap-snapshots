<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Francy_Charts">
<Heading>Francy Charts</Heading>

It is possible to build <C>Charts</C> with simple <C>Datasets</C>.
<P/>
Currently, Francy, supports Bar, Line and Scatter Charts.
<P/>
Please see Francy-JS for client implementation.
<Section Label="Chapter_Francy_Charts_Section_Categories">
<Heading>Categories</Heading>

In this section we show the Francy Chart Categories.
<ManSection>
  <Filt Arg="arg" Name="IsChart" Label="for IsFrancyObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Identifies <C>Chart</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsChartType" Label="for IsFrancyTypeObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Identifies <C>ChartType</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsChartDefaults" Label="for IsFrancyDefaultObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Identifies <C>ChartDefaults</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsAxisScaleType" Label="for IsFrancyTypeObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Identifies <C>AxisScaleType</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsXAxis" Label="for IsFrancyObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Identifies <C>XAxis</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsYAxis" Label="for IsFrancyObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Identifies <C>YAxis</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsDataset" Label="for IsFrancyObject"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Identifies <C>Dataset</C> objects.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Francy_Charts_Section_Families">
<Heading>Families</Heading>

In this section we show the Francy Chart Families.
</Section>


<Section Label="Chapter_Francy_Charts_Section_Representations">
<Heading>Representations</Heading>

In this section we show the Francy Chart Representations.
<ManSection>
  <Filt Arg="arg" Name="IsChartRep" Label="for IsComponentObjectRep"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Checks whether an <C>Object</C> has a <C>Chart</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsChartDefaultsRep" Label="for IsComponentObjectRep"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Checks whether an <C>Object</C> has a <C>ChartDefaults</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsChartTypeRep" Label="for IsComponentObjectRep"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Checks whether an <C>Object</C> has a <C>ChartType</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsAxisScaleTypeRep" Label="for IsComponentObjectRep"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Checks whether an <C>Object</C> has a <C>AxisScaleType</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsAxisRep" Label="for IsComponentObjectRep"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Checks whether an <C>Object</C> has a <C>AxisRep</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsDatasetRep" Label="for IsComponentObjectRep"/>
 <Returns><C>true</C> or <C>false</C>
</Returns>
 <Description>
Checks whether an <C>Object</C> has a <C>DatasetRep</C> internal representation.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Francy_Charts_Section_Operations">
<Heading>Operations</Heading>

In this section we show the Francy Chart Operations.
<ManSection>
  <Oper Arg="IsChartType[, IsChartDefaults]" Name="Chart" Label="for IsChartType, IsChartDefaults"/>
 <Returns><C>Chart</C>
</Returns>
 <Description>
Every object to draw will be a subclass of this object. This will allow
all the objects to contain the same base information.
<P/>
Examples:
<P/>
Create a simple <C>Chart</C> of type <C>ChartType.BAR</C>:
<Example><![CDATA[
gap> chart:=Chart(ChartType.BAR);
gap> SetAxisXTitle(chart, "X Axis");
gap> AxisXTitle(chart);
gap> SetAxisXDomain(chart, ["domain1", "domain2", "domain3", "domain4", "domain5"]); # default []
gap> AxisXDomain(chart);
gap> SetAxisYTitle(chart, "Y Axis");
gap> AxisYTitle(chart);
gap> data1 := Dataset("data1", [100,20,30,47,90]);
gap> data2 := Dataset("data2", [51,60,72,38,97]);
gap> data3 := Dataset("data3", [50,60,70,80,90]);
gap> Add(chart, [data1, data2, data3]);
gap> Remove(chart, data1);
gap> Add(chart, data1);
gap> Remove(chart, [data2, data3]);
gap> Length(RecNames(chart!.data)) = 1;
]]></Example>



<P/>
Create a simple <C>Chart</C> of type <C>ChartType.LINE</C>:
<Example><![CDATA[
gap> chart:=Chart(ChartType.LINE);
gap> SetAxisXTitle(chart, "X Axis");
gap> SetAxisYTitle(chart, "Y Axis");
gap> data1 := Dataset("data1", [100,20,30,47,90]);
gap> Add(chart, data1);
]]></Example>



<P/>
Create a simple <C>Chart</C> of type <C>ChartType.SCATTER</C>:
<Example><![CDATA[
gap> chart:=Chart(ChartType.SCATTER);
gap> SetAxisXTitle(chart, "X Axis");
gap> SetAxisYTitle(chart, "Y Axis");
gap> data1 := Dataset("data1", [100,20,30,47,90]);
gap> Add(chart, data1);
]]></Example>



<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsChart, [IsDataset, List(IsDataset)]" Name="Add" Label="for IsChart, IsDataset"/>
 <Returns><C>Chart</C>
</Returns>
 <Description>
Adds a <C>Dataset</C> to a specific <C>Chart</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsChart, [IsDataset, List(IsDataset)]" Name="Remove" Label="for IsChart, IsDataset"/>
 <Returns><C>Chart</C>
</Returns>
 <Description>
Removes a <C>Dataset</C> from a specific <C>Chart</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsString(title), IsList(data)" Name="Dataset" Label="for IsString, IsList"/>
 <Returns><C>Dataset</C>
</Returns>
 <Description>
Creates a dataset.
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsChartType" Name="DefaultAxis" Label="for IsChartType"/>
 <Returns><C>rec</C>
</Returns>
 <Description>
Returns the default settings for a <C>ChartType</C>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsAxisScaleType, IsString(title), IsList(domain)" Name="XAxis" Label="for IsAxisScaleType, IsString, IsList"/>
 <Returns><C>XAxis</C>
</Returns>
 <Description>
Creates a XAxis
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsAxisScaleType, IsString(title), IsList(domain)" Name="YAxis" Label="for IsAxisScaleType, IsString, IsList"/>
 <Returns><C>YAxis</C>
</Returns>
 <Description>
Creates a YAxis
<P/>
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Francy_Charts_Section_Global">
<Heading>Global</Heading>

In this section we show the Global Chart Francy Records for multi purpose.
</Section>


<Section Label="Chapter_Francy_Charts_Section_Attributes">
<Heading>Attributes</Heading>

In this section we show the Francy Attributes
<ManSection>
  <Attr Arg="arg" Name="ShowLegend" Label="for IsChart"/>
 <Returns><C>IsBool</C> True if enabled otherwise False
</Returns>
 <Description>
<C>ShowLegend</C> is a property that enables or disables the legend in the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="arg1" Name="ShowLegend" Label="for IsChart"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="IsChart, IsBool" Name="SetShowLegend" Label="for IsChart, IsBool"/>
 <Description>
<C>ShowLegend</C> is a property that enables or disables the legend in the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="AxisXTitle" Label="for IsChart"/>
 <Returns><C>IsString</C> with the title of the object
</Returns>
 <Description>
This title is used to display the X Axis Title in the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="arg1" Name="AxisXTitle" Label="for IsChart"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="IsChart, IsString" Name="SetAxisXTitle" Label="for IsChart, IsString"/>
 <Description>
This title is used to display the X Axis Title in the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="AxisYTitle" Label="for IsChart"/>
 <Returns><C>IsString</C> with the title of the object
</Returns>
 <Description>
This title is used to display the Y Axis Title in the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="arg1" Name="AxisYTitle" Label="for IsChart"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="IsChart, IsString" Name="SetAxisYTitle" Label="for IsChart, IsString"/>
 <Description>
This title is used to display the Y Axis Title in the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="AxisXDomain" Label="for IsChart"/>
 <Returns><C>IsList</C>
</Returns>
 <Description>
This is the domain of the X Axis values in the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="arg1" Name="AxisXDomain" Label="for IsChart"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="IsList, IsList" Name="SetAxisXDomain" Label="for IsChart, IsList"/>
 <Description>
This is the domain of the X Axis values in the client implementation.
 </Description>
</ManSection>


</Section>


</Chapter>

