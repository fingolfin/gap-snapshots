#############################################################################
##
#W  semifp.xml
#Y  Copyright (C) 2020                                   Luke Elliott
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="ParseRelations">
<ManSection>
  <Oper Name = "ParseRelations" Arg = "gens, rels"/>
  <Returns>A list of pairs of semigroup elements.</Returns>
  <Description>
    <C>ParseRelations</C> converts a string describing relations for a
    semigroup to the list of pairs of semigroup elements it represents.
    Any white space given is ignored. The output list is then compatable
    with other GAP functions, in the below examples we see free semigroups
    being directly quotiented by the output of the <C>ParseRelations</C>
    function.
    <P/>

    <A/>gens<A/> must be a list of generators for a free semigroup, each being
    a single English letter (in upper or lower case). <A/>rels<A/> must be
    string that lists the equalities desired.
    <P/>

    <Example><![CDATA[
gap> f := FreeSemigroup("x", "y", "z");;                           
gap> AssignGeneratorVariables(f);
#I  Assigned the global variables [ x, y, z ]
gap> ParseRelations([x, y, z], "  x=(y^2z) ^2x, y=xxx , z=y^3"); 
[ [ x, (y^2*z)^2*x ], [ y, x^3 ], [ z, y^3 ] ]
gap> r := ParseRelations([x, y, z], "  x=(y^2z)^2x, y=xxx=z , z=y^3");
[ [ x, (y^2*z)^2*x ], [ y, x^3 ], [ x^3, z ], [ z, y^3 ] ]
gap> f / r;
<fp semigroup on the generators [ x, y, z ]>
gap> f2 := FreeSemigroup("a");                                     
<free semigroup on the generators [ a ]>
gap> f2 / ParseRelations(GeneratorsOfSemigroup(f2), "a = a^2");
<fp semigroup on the generators [ a ]>]]></Example>
  </Description>
</ManSection>
<#/GAPDoc>

