# NConvex, single 5
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST( "nconvex05.tst");

# doc/_Chunks.xml:275-323
gap> P := Polyhedron( [ [ 1, 1 ], [ 4, 7 ] ], [ [ 1, -1 ], [ 1, 1 ] ] );
<A polyhedron in |R^2>
gap> VerticesOfMainRatPolytope( P );
[ [ 1, 1 ], [ 4, 7 ] ]
gap> VerticesOfMainPolytope( P );
[ [ 1, 1 ], [ 4, 7 ] ]
gap> P := Polyhedron( [ [ 1/2, 1/2 ] ], [ [ 1, 1 ] ] );
<A polyhedron in |R^2>
gap> VerticesOfMainRatPolytope( P );
[ [ 1/2, 1/2 ] ]
gap> VerticesOfMainPolytope( P );
[ [ 1, 1 ] ]
gap> LatticePointsGenerators( P );
[ [ [ 1, 1 ] ], [ [ 1, 1 ] ], [  ] ]
gap> Dimension( P );
1
gap> Q := Polyhedron( [ [ 5, 0 ], [ 0, 6 ] ], [ [ 1, 2 ] , [ -1, -2 ] ] );
<A polyhedron in |R^2>
gap> VerticesOfMainRatPolytope( Q );
[ [ 0, 6 ], [ 5, 0 ] ]
gap> V_using_4ti2 := [ [ -3, -16 ], [ -3, 0 ] ];;
gap> V_using_normaliz := [ [ 0, 6 ], [ 5, 0 ] ];;
gap> V := VerticesOfMainPolytope( Q );;
gap> #V = V_using_4ti2 or V = V_using_normaliz; true
gap> L_using_4ti2 := [ [ [ -3, -16 ], [ -3, -15 ], [ -3, -14 ], 
> [ -3, -13 ], [ -3, -12 ], [ -3, -11 ], [ -3, -10 ], 
> [ -3, -9 ], [ -3, -8 ], [ -3, -7 ], [ -3, -6 ], 
> [ -3, -5 ], [ -3, -4 ], [ -3, -3 ], [ -3, -2 ], 
> [ -3, -1 ], [ -3, 0 ] ], [  ], [ [ 1, 2 ] ] ];;
gap> L_using_normaliz := [ [ [ 0, -10 ], [ 0, -9 ], [ 0, -8 ],
> [ 0, -7 ], [ 0, -6 ], [ 0, -5 ], [ 0, -4 ], [ 0, -3 ], 
> [ 0, -2 ], [ 0, -1 ], [ 0, 0 ], [ 0, 1 ], [ 0, 2 ], 
> [ 0, 3 ], [ 0, 4 ], [ 0, 5 ], [ 0, 6 ] ], [  ], [ [ -1, -2 ] ] ];;
gap> L := LatticePointsGenerators( Q );;
gap> #L = L_using_4ti2 or L = L_using_normaliz; true
gap> Dimension( Q );
2
gap> RayGeneratorsOfTailCone( Q );
[ [ -1, -2 ], [ 1, 2 ] ]
gap> BasisOfLinealitySpace( Q );
[ [ 1, 2 ] ]
gap> DefiningInequalities( Q );
[ [ 6, 2, -1 ], [ 10, -2, 1 ] ]
gap> Q;
<A polyhedron in |R^2 of dimension 2>

#
gap> STOP_TEST("nconvex05.tst", 1 );
